{
  "version": 3,
  "file": "ng-angular.js",
  "sources": [
    "ng://ng-angular/out/lib/ansible.service.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n//import { environment } from '../environments/environment';\n\nconst Web3 = require('web3');\nlet ansible = require('ansiblejs');\n\nlet ansibleRelayAbi = require('../ansible_relay.abi');\n\nexport class SignedState {\n    data : string;\n    vs : Array<number>;\n    rs : Array<string>;\n    ss : Array<string>;\n}\n\nexport class AnsibleEvent {\n    address : string;\n    blockNumber : number;\n    transactionIndex : number;\n    transactionHash : string;\n    blockHash : string;\n    logIndex : number;\n    removed : boolean;\n    event : string;\n    args : Object;\n}\n\ndeclare let require: any;\ndeclare let window: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnsibleService {\n\n    private account : string;\n    private accounts : Array<string>;\n\n    private ansibleRelay : any;\n    private ansibleRelayAddress : string = \"0x0\";\n\n    private web3: any;\n\n    private relayID = 0;\n\n    private FULL_RANGE = { fromBlock: 0, toBlock: 'latest' };\n\n    constructor(){\n        this.checkAndInstantiateWeb3();\n        this.ansibleRelay = this.web3.eth.contract(ansibleRelayAbi).at(this.ansibleRelayAddress);\n        this.getAccounts().subscribe(accs => {\n            this.accounts = accs;\n            this.account = this.accounts[0];\n        }, err => alert(err));\n    }\n\n    checkAndInstantiateWeb3 = () => {\n        // Checking if Web3 has been injected by the browser (Mist/MetaMask)\n        if (typeof window.web3 !== 'undefined') {\n          console.warn(\n            'Using web3 detected from external source. If you find that your accounts don\\'t appear or you have 0 MetaCoin, ensure you\\'ve configured that source properly. If using MetaMask, see the following link. Feel free to delete this warning. :) http://truffleframework.com/tutorials/truffle-and-metamask'\n          );\n          // Use Mist/MetaMask's provider\n          this.web3 = new Web3(window.web3.currentProvider);\n        } else {\n            this.web3 = new Web3(\n              new Web3.providers.HttpProvider(\"http://localhost:8545\")\n           );\n          /*console.warn(\n            'No web3 detected. Falling back to ${environment.HttpProvider}. You should remove this fallback when you deploy live, as it\\'s inherently insecure. Consider switching to Metamask for development. More info here: http://truffleframework.com/tutorials/truffle-and-metamask'\n          );\n          // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)\n          this.web3 = new Web3(\n            new Web3.providers.HttpProvider(environment.HttpProvider)\n         );*/\n\n        }\n    };\n\n    public signInitialAnsible(speaker : string, data) : Observable<SignedState> {\n        let state = this.createInitialState(speaker, data);\n        return this.sign(state);\n    }\n\n    public createInitialState(speaker : string, data) {\n        let state = [];\n        state = ansible.appendUint16(state, this.relayID);\n        state = ansible.appendAddress(state, speaker);\n        state.concat(data);\n        return state;\n    }\n\n    public createAnsibleState(ansibleID : number, data) {\n        let state = [];\n        state = ansible.appendUint16(state, this.relayID);\n        state = ansible.appendUint64(state, ansibleID);\n        state.concat(data);\n        return state;\n    }\n\n    public signAnsibleState(ansibleID : number, data) : Observable<SignedState> {\n        let state = this.createAnsibleState(ansibleID, data);\n        return this.sign(state);\n    }\n\n    private sign(data) : Observable<SignedState> {\n         return Observable.create(observer => {\n            this.web3.eth.sign(this.account, data, function(error,sig) {\n                if (!error) {\n                    let signedState = new SignedState();\n                    // sig is the returned signature. Separate out the signature components:\n                    signedState.data = sig.substr(2, sig.length);\n                    signedState.rs = ['0x' + signedState.data.substr(0, 64)];\n                    signedState.ss = ['0x' + signedState.data.substr(64, 64)];\n                    signedState.vs = [parseInt(signedState.data.substr(128, 2), 16)];\n                    observer.next(signedState);\n                } else {\n                    observer.error(error);\n                }\n             });\n         });\n     }\n\n     getAccounts(): Observable<any> {\n       \treturn Observable.create(observer => {\n       \t    this.web3.eth.getAccounts((err, accs) => {\n       \t        if (err != null) {\n       \t            observer.error('There was an error fetching your accounts.')\n       \t        }\n\n       \t        if (accs.length === 0) {\n       \t            observer.error('Couldn\\'t get any accounts! Make sure your Ethereum client is configured correctly.')\n       \t        }\n\n       \t        observer.next(accs)\n       \t        observer.complete();\n       \t    });\n       \t})\n      }\n\n    public get(ansibleID : number) : Observable<boolean> {\n        return Observable.create(observer => {\n            this.ansibleRelay.getAnsible.call(ansibleID,\n                function (err, result) {\n                    if (err != null) {\n                        observer.error(err);\n                        return;\n                    }\n                    observer.next(result);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    public open(speaker : string, state : SignedState, deposit : number) : Observable<boolean> {\n        return Observable.create(observer => {\n            this.ansibleRelay.openAnsible.call(speaker,\n                state.data, state.vs, state.rs, state.ss,\n                {value: deposit},\n                function (err, result) {\n                    if (err != null) {\n                        observer.error(err);\n                        return;\n                    }\n                    observer.next(result);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    public join(ansibleID : number, state : SignedState, deposit : number) : Observable<boolean> {\n        return Observable.create(observer => {\n            this.ansibleRelay.joinAnsible.call(ansibleID,\n                state.data, state.vs, state.rs, state.ss,\n                {value: deposit},\n                function (err, result) {\n                    if (err != null) {\n                        observer.error(err);\n                        return;\n                    }\n                    observer.next(result);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    public challenge(ansibleID : number, one : SignedState, two : SignedState) : Observable<boolean> {\n        return Observable.create(observer => {\n            this.ansibleRelay.challenge.call(ansibleID,\n                one.data, one.vs, one.rs, one.ss,\n                two.data, two.vs, two.rs, two.ss,\n                function (err, result) {\n                    if (err != null) {\n                        observer.error(err);\n                        return;\n                    }\n                    observer.next(result);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    public challengeState(ansibleID : number, one : SignedState) : Observable<boolean> {\n        return Observable.create(observer => {\n            this.ansibleRelay.challengeState.call(ansibleID,\n                one.data, one.vs, one.rs, one.ss,\n                function (err, result) {\n                    if (err != null) {\n                        observer.error(err);\n                        return;\n                    }\n                    observer.next(result);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    public checkpoint(ansibleID : number, enforceExpiry : boolean, state : SignedState) : Observable<boolean> {\n        return Observable.create(observer => {\n            this.ansibleRelay.checkpoint.call(ansibleID, enforceExpiry,\n                state.data, state.vs, state.rs, state.ss,\n                function (err, result) {\n                    if (err != null) {\n                        observer.error(err);\n                        return;\n                    }\n                    observer.next(result);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    public claimExpiry(ansibleID : number) : Observable<boolean> {\n        return Observable.create(observer => {\n            this.ansibleRelay.claimExpiry.call(ansibleID,\n                function (err, result) {\n                    if (err != null) {\n                        observer.error(err);\n                        return;\n                    }\n                    observer.next(result);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    public close(ansibleID : number, state : SignedState) : Observable<boolean> {\n        return Observable.create(observer => {\n            this.ansibleRelay.closeAnsible.call(ansibleID,\n                state.data, state.rs, state.vs, state.ss,\n                function (err, result) {\n                    if (err != null) {\n                        observer.error(err);\n                    }\n                    observer.next(result);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    public getSpeakerEvents(speaker : string) : Observable<Array<AnsibleEvent>>{\n        let indices = {speaker : speaker};\n        return this.getEvents(indices);\n    }\n\n    public getAnsibleEvents(id : number) : Observable<Array<AnsibleEvent>>{\n        let indices = {id : id};\n        return this.getEvents(indices);\n    }\n\n    private getEvents(indices : Object) : Observable<Array<AnsibleEvent>> {\n        let count = 0;\n        let max = 6;\n        let events : Array<AnsibleEvent> = [];\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleOpened(indices, this.FULL_RANGE).get((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    events.concat(data.json());\n                    count++;\n                    if (count == max) {\n                        observer.next(events);\n                        observer.complete();\n                    }\n                }\n            });\n            this.ansibleRelay.events.AnsibleJoined(indices, this.FULL_RANGE).get((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    events.concat(data.json());\n                    count++;\n                    if (count == max) {\n                        observer.next(events);\n                        observer.complete();\n                    }\n                }\n            });\n            this.ansibleRelay.events.AnsibleClosed(indices, this.FULL_RANGE).get((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    events.concat(data.json());\n                    count++;\n                    if (count == max) {\n                        observer.next(events);\n                        observer.complete();\n                    }\n                }\n            });\n            this.ansibleRelay.events.AnsibleExpired(indices, this.FULL_RANGE).get((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    events.concat(data.json());\n                    count++;\n                    if (count == max) {\n                        observer.next(events);\n                        observer.complete();\n                    }\n                }\n            });\n            this.ansibleRelay.events.AnsibleCheckpoint(indices, this.FULL_RANGE).get((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    events.concat(data.json());\n                    count++;\n                    if (count == max) {\n                        observer.next(events);\n                        observer.complete();\n                    }\n                }\n            });\n            this.ansibleRelay.events.AnsibleChallenged(indices, this.FULL_RANGE).get((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    events.concat(data.json());\n                    count++;\n                    if (count == max) {\n                        observer.next(events);\n                        observer.complete();\n                    }\n                }\n            });\n        });\n    }\n\n    public getSpeakerOpens(speaker : string) : Observable<Array<AnsibleEvent>> {\n        let indices = {speaker: speaker};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleOpened(indices, this.FULL_RANGE).get((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public getSpeakerCloses(speaker : string) : Observable<Array<AnsibleEvent>> {\n        let indices = {speaker: speaker};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleClosed(indices, this.FULL_RANGE).get((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public getSpeakerChallenges(speaker : string) : Observable<Array<AnsibleEvent>> {\n        let indices = {speaker: speaker};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleChallenged(indices, this.FULL_RANGE).get((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public getSpeakerClaims(speaker : string) : Observable<Array<AnsibleEvent>> {\n        let indices = {speaker: speaker};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleClaimed(indices, this.FULL_RANGE).get((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public getSpeakerJoins(speaker : string) : Observable<Array<AnsibleEvent>> {\n        let indices = {speaker: speaker};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleJoined(indices, this.FULL_RANGE).get((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public getSpeakerCheckpoints(speaker : string) : Observable<Array<AnsibleEvent>> {\n        let indices = {speaker: speaker};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleCheckpoint(indices, this.FULL_RANGE).get((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public getAnsibleOpens(id : number) : Observable<Array<AnsibleEvent>> {\n        let indices = {id : id};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleOpened(indices, this.FULL_RANGE).get((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public getAnsibleCloses(id : number) : Observable<Array<AnsibleEvent>> {\n        let indices = {id: id};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleClosed(indices, this.FULL_RANGE).get((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public getAnsibleChallenges(id : number) : Observable<Array<AnsibleEvent>> {\n        let indices = {id : id};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleChallenged(indices, this.FULL_RANGE).get((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public getAnsibleClaims(id : number) : Observable<Array<AnsibleEvent>> {\n        let indices = {id : id};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleClaimed(indices, this.FULL_RANGE).get((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public getAnsibleJoins(id : number) : Observable<Array<AnsibleEvent>> {\n        let indices = {id : id};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleJoined(indices, this.FULL_RANGE).get((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public getAnsibleCheckpoints(id : number) : Observable<Array<AnsibleEvent>> {\n        let indices = {id : id};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleCheckpoints(indices, this.FULL_RANGE).get((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n\n    public watchSpeakerOpens(speaker : string) : Observable<AnsibleEvent> {\n        let indices = {speaker: speaker};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleOpened(indices).watch((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public watchSpeakerCloses(speaker : string) : Observable<AnsibleEvent> {\n        let indices = {speaker: speaker};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleClosed(indices).watch((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public watchSpeakerChallenges(speaker : string) : Observable<AnsibleEvent> {\n        let indices = {speaker: speaker};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleChallenged(indices).watch((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public watchSpeakerClaims(speaker : string) : Observable<AnsibleEvent> {\n        let indices = {speaker: speaker};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleClaimed(indices).watch((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public watchSpeakerJoins(speaker : string) : Observable<AnsibleEvent> {\n        let indices = {speaker: speaker};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleJoined(indices).watch((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public watchSpeakerCheckpoints(speaker : string) : Observable<AnsibleEvent> {\n        let indices = {speaker: speaker};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleCheckpoint(indices).watch((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public watchAnsibleCloses(id : number) : Observable<AnsibleEvent> {\n        let indices = {id : id};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleClosed(indices).watch((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public watchAnsibleChallenges(id : number) : Observable<AnsibleEvent> {\n        let indices = {id : id};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleChallenged(indices).watch((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public watchAnsibleClaims(speaker : string) : Observable<AnsibleEvent> {\n        let indices = {speaker: speaker};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleClaimed(indices).watch((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public watchAnsibleJoins(id : number) : Observable<AnsibleEvent> {\n        let indices = {id : id};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleJoined(indices).watch((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public watchAnsibleCheckpoints(id : number) : Observable<AnsibleEvent> {\n        let indices = {id : id};\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleCheckpoint(indices).watch((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n    public watchSpeakerEvents(speaker : string) {\n        let indices = { speaker: speaker};\n        return this.watchEvents(indices);\n    }\n\n    public watchAnsibleEvents(id : number) {\n        let indices = {id: id};\n        return this.watchEvents(indices)\n    }\n\n    private watchEvents(indices : Object) : Observable<AnsibleEvent> {\n        return Observable.create(observer => {\n            this.ansibleRelay.events.AnsibleOpened(indices).watch((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n            this.ansibleRelay.events.AnsibleJoined(indices).watch((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n            this.ansibleRelay.events.AnsibleClosed(indices).watch((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n            this.ansibleRelay.events.AnsibleExpired(indices).watch((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n            this.ansibleRelay.events.AnsibleCheckpoint(indices).watch((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n            this.ansibleRelay.events.AnsibleChallenged(indices).watch((error, data) => {\n                if (error) {\n                    observer.error(error);\n                } else {\n                    observer.next(data.json());\n                }\n            });\n        });\n    }\n\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
